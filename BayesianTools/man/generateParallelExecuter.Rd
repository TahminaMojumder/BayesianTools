% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BayesianSetupGenerateParallel.R
\name{generateParallelExecuter}
\alias{generateParallelExecuter}
\title{Factory to generate a parallel executor of an existing function}
\usage{
generateParallelExecuter(
  fun,
  parallel = F,
  parallelOptions = list(variables = "all", packages = "all", dlls = NULL)
)
}
\arguments{
\item{fun}{function to be changed to parallel execution}

\item{parallel}{should a parallel R cluster be used? If set to T, machine will automatically detect the available cores and n-1 of the available n cores will be used. Alternatively, you can manually set the number of cores to be used}

\item{parallelOptions}{a list containing three lists. \n First, "packages": determines the R packages required to run the likelihood function. \n Second, "variables": the objects in the global environment needed to run the likelihood function \n Third, "dlls": the DLLs needed to run the likelihood function (see Details).}
}
\description{
Factory to generate a parallel executor of an existing function
}
\details{
For parallelization, if option T is selected, an automatic parallelization is tried via R. Alternatively, "external" can be selected on the assumption that the likelihood has already been parallelized. In the latter case, a matrix with parameters as columns must be accepted. You can also specify which packages, objects and DLLs are exported to the cluster. By default, a copy of your workspace is exported, but depending on your workspace, this can be inefficient. As an alternative, you can specify the environments and packages in the likelihood function (e.g. BayesianTools::VSEM() instead of VSEM()).
}
\note{
can be used to make functions compatible with library sensitivity
}
\examples{

testDensityMultiNormal <- generateTestDensityMultiNormal()


parDen <- generateParallelExecuter(testDensityMultiNormal)$parallelFun
x = matrix(runif(9,0,1), nrow = 3)
parDen(x)

}
\author{
Florian Hartig
}
